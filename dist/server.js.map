{"version":3,"sources":["../server/server.js"],"names":["require","config","mongoose","port","process","env","PORT","SourceMapSupport","install","connect","useNewUrlParser","useUnifiedTopology","then","server","app","listen","console","log","setTimeout","catch","error","use","express","static","bodyParser","json","urlencoded","extended","name","keys","passport","initialize","session","isLoggedIn","req","res","next","status","message","isAuthorized","houseHold","owner","user","_id","post","currentUser","User","findById","household","APIKEY","method","headers","accessToken","body","JSON","stringify","houseName","response","ok","queryFilter","googleID","findOne","HouseHold","create","calendarID","id","members","updateOne","newHousehold","send","err","house","eventBody","get","params","houseID","xxxz","userHousehold","delete","deleteOne","authenticate","scope","logout","redirect","successRedirect","failureRedirect","sendFile","path","resolve"],"mappings":"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","file":"server.js","sourcesContent":["import express, { response } from 'express';\nimport bodyParser from 'body-parser';\nimport { ObjectId, ObjectID } from 'mongodb';\nimport SourceMapSupport from 'source-map-support';\nimport passport from 'passport';\nimport cookieSession from 'cookie-session'\nimport path from 'path';\nimport User from '../models/User';\nimport HouseHold from '../models/Household';\nimport 'babel-polyfill';\nimport fetch from 'node-fetch';\nimport array from 'lodash/array'\nrequire('dotenv').config();\nrequire('../passport-setup')\nconst mongoose = require('mongoose');\nlet port = process.env.PORT || 3000;\n//app.set('port', (process.env.PORT || 5000));\nSourceMapSupport.install();\n//INITIALIZE DB\nmongoose.connect('mongodb+srv://JonathanA:Alpha4086465832@roommatecluster.wjtg8.mongodb.net/Roommates?retryWrites=true&w=majority',{ useNewUrlParser: true, useUnifiedTopology: true })\n.then(connection => \n    {\n        let server = app.listen(port, () => \n        {\n            console.log(`app started on port ${port}`)\n            console.log('Database connected successfully');\n        });\n\n        server.setTimeout(1200000000);\n    })\n.catch(error => \n    {\n        console.log('ERROR when connecting:', error);\n    });\nconst app = express();\n//MIDDLEWARE\n\napp.use(express.static('static'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended:false}));\napp.use(cookieSession({\n    name:'Roomies-sesion',\n    keys:['key1','key2']\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n\n//ROUTES\nconst isLoggedIn = (req,res,next) =>\n{\n    if(req.session.passport)\n    {\n        next();\n    }\n    else\n    {\n        res.status(401).json({message: 'Route only accessible to logged in users'})\n    }\n}\n\nconst isAuthorized = (houseHold) => \n{\n    if(houseHold.owner === req.session.passport.user.user._id)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}\n\napp.post('/api/v1/createHousehold', isLoggedIn, (req,res) => \n{\n    let currentUser;\n    User.findById(req.session.passport.user.user._id).then(user => \n        {\n            currentUser = user;\n            if(currentUser.household)\n            {\n                res.status(500).json({message: 'Users are only allowed to be a part of one household at a time'})\n            }\n\n            else\n            {\n                fetch(`https://www.googleapis.com/calendar/v3/calendars?key=${process.env.APIKEY}`, {\n                    method:'POST',\n                    headers:{'Authorization':`Bearer ${req.session.passport.user.accessToken}`, 'Accept':'application/json','Content-Type':'application/json'},\n                    body:JSON.stringify({'summary':req.body.houseName}),\n                })                                                \n                .then(response => \n                {\n                    if(response.ok)\n                    {\n                        response.json().then(message => \n                        {\n                            const queryFilter = {googleID: req.session.passport.user.user.googleID};\n                            User.findOne(queryFilter).then(user => \n                            {\n                                HouseHold.create({\n                                    houseName: JSON.stringify(req.body.houseName),\n                                    calendarID: message.id,\n                                    owner: user._id,\n                                    members: [user,]\n                                })\n                                .then(newHousehold => \n                                {\n                                    User.updateOne(queryFilter, {household:newHousehold._id} ).then( () => \n                                    {\n                                        res.status(200).json(newHousehold)\n                                    })\n                                })\n                            })\n\n                        })\n                    }\n                    else\n                    {\n                        res.status(500).send({message: 'Error when creating calendar'});\n                    }\n                })\n                .catch(err => \n                {\n                    res.status(500).send(err)\n                })\n            }\n        });\n});\n\napp.post('/api/v1/events', isLoggedIn, (req,res) => \n{\n    HouseHold.findById(req.session.passport.user.user.household).then(house => \n    {\n        console.log(house);\n        fetch(`https://www.googleapis.com/calendar/v3/calendars/${house.calendarID}/events?key=${process.env.APIKEY}`, {\n            method:'POST',\n            headers:{'Authorization':`Bearer ${req.session.passport.user.accessToken}`, 'Accept':'application/json','Content-Type':'application/json'},\n            body:JSON.stringify(req.body.eventBody),\n        })\n        .then(response => \n        {\n            if(response.ok)\n            {\n                response.json().then(message => \n                {\n                    res.status(200).json({'message':message});\n                })\n                \n            }\n            else\n            {\n                res.status(501).json({message:'problem creating google calendar event'});\n            }\n        })\n        .catch(err => \n        {\n            res.status(500).json({message: err});\n        })\n    })\n})\n\napp.get('/api/v1/houseHolds/:houseID', (req,res) => \n{\n    HouseHold.findById(req.params.houseID).then(houseHold => \n        {\n            res.status(200).json(houseHold);xxxz\n        })\n        .catch(err => \n        {\n            res.status(501).json({'message': err})\n        })\n})\n\napp.get('/api/v1/users', isLoggedIn, (req,res) => \n{\n    User.findById(req.session.passport.user.user._id).then( user => \n    {\n        res.status(200).json(user);\n    })\n    .catch(err => \n    {\n        res.status(500).json(err);\n    })\n})\n\napp.get('/api/v1/houseHolds/', isLoggedIn, (req,res) => \n{\n    let userHousehold;\n\n    User.findById(req.session.passport.user.user._id).then(user => \n        {\n            HouseHold.findById(user.household).then(house => \n                {\n                    userHousehold = house;\n                    res.status(200).json({userHousehold});\n                })\n        })\n        .catch(err => \n        {\n            res.status(500).json(err)\n        })\n})\n\napp.delete('/api/v1/houseHolds/:houseID',isLoggedIn,(req,res) => \n{\n    console.log(req.params.houseID);\n    HouseHold.findById(req.params.houseID).then(houseHold => \n    {\n        if(houseHold.owner == req.session.passport.user.user._id)\n        {\n            HouseHold.deleteOne({_id: houseHold._id}).then( () => \n            {\n                User.updateOne({_id:req.session.passport.user.user._id}, {household: null})\n                    .then( () => res.status(200).json({message: 'Household deleted successfully'}))\n            });\n        }\n        else\n        {\n            res.status(401).json({message: 'Only owner of the house may delete the household'});\n        }\n        \n    })\n    .catch(err => \n        {\n            console.log(err);\n            res.status(500).json({message: err})\n        })\n})\n\n//GOOGLE OAUTH2.0 ROUTES\napp.get('/auth/loggedinonly',isLoggedIn, (req,res) =>\n{\n    res.send('you are logged in!')\n})\napp.get('/auth/google', passport.authenticate('google', { scope:[ 'profile','email','https://www.googleapis.com/auth/calendar',] }\n));\napp.get('/api/v1/logout', (req,res) =>\n{\n    req.session = null;\n    req.logout();\n    res.send(req.session);\n    res.redirect('/');\n});\napp.get('/auth/google/failure',(req,res) => {res.send('Unable to login')});\napp.get( '/auth/google/callback',passport.authenticate( 'google', {\n        successRedirect: '/auth/google/success',\n        failureRedirect: '/auth/google/failure'\n}));\napp.get('/auth/google/success',(req,res) => \n{\n    res.send(req.session.passport);\n})\n\n//Static page route\napp.get('*', (req,res) =>\n{\n    res.sendFile(path.resolve('static/index.html'));\n});\n\n"]}